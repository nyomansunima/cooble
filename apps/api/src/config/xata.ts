// Generated by Xata Codegen 0.26.5. Please do not edit.
import { buildClient } from '@xata.io/client'
import type {
  BaseClientOptions,
  SchemaInference,
  XataRecord,
} from '@xata.io/client'

const tables = [
  {
    name: 'users',
    columns: [
      { name: 'fullName', type: 'string' },
      { name: 'avatar', type: 'string' },
      { name: 'cover', type: 'string' },
      { name: 'username', type: 'string' },
      { name: 'email', type: 'email' },
      { name: 'location', type: 'string' },
      { name: 'verified', type: 'bool', defaultValue: 'false' },
      { name: 'providers', type: 'multiple' },
      { name: 'role', type: 'string' },
    ],
  },
] as const

export type SchemaTables = typeof tables
export type InferredTypes = SchemaInference<SchemaTables>

export type Users = InferredTypes['users']
export type UsersRecord = Users & XataRecord

export type DatabaseSchema = {
  users: UsersRecord
}

const DatabaseClient = buildClient()

const defaultOptions = {
  databaseURL:
    'https://Nyoman-Sunima-s-workspace-k13nsj.us-east-1.xata.sh/db/cooble',
}

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options }, tables)
  }
}

let instance: XataClient | undefined = undefined

export const getXataClient = () => {
  if (instance) return instance

  instance = new XataClient()
  return instance
}
